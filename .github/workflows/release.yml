name: Publish Package to PyPI and TestPyPI

on:
  push:
    branches:
      - dev
    tags:
      - v*

jobs:
  build:
    name: Build Distribution
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Install pypa/build
      run: >-
        python3 -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v3
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    name: Publish to PyPI
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/calabar
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

# NOTE: Turn off for now, for the future, try this before running:
# gh: To use GitHub CLI in a GitHub Actions workflow, set the GH_TOKEN environment variable. Example:
# env:
#   GH_TOKEN: ${{ github.token }}
#  github-release:
#    name: Sign distribution with Sigstore and upload them to GitHub Release
#    needs: publish-to-pypi
#    runs-on: ubuntu-latest
#
#    permissions:
#      contents: write  # IMPORTANT: mandatory for making GitHub Releases
#      id-token: write  # IMPORTANT: mandatory for sigstore
#
#    steps:
#    - name: Download all the dists
#      uses: actions/download-artifact@v3
#      with:
#        name: python-package-distributions
#        path: dist/
#    - name: Sign the dists with Sigstore
#      uses: sigstore/gh-action-sigstore-python@v1.2.3
#      with:
#        inputs: >-
#          ./dist/*.tar.gz
#          ./dist/*.whl
#    - name: Create GitHub Release
#      run: >-
#        gh release create
#        '${{ github.ref_name }}'
#        --notes ""
#    - name: Upload artifact signatures to GitHub Release
#      env:
#        GITHUB_TOKEN: ${{ github.token }}
#      # Upload to GitHub Release using the `gh` CLI.
#      # `dist/` contains the built packages, and the
#      # sigstore-produced signatures and certificates.
#      run: >-
#        gh release upload
#        '${{ github.ref_name }}' dist/**
#        --repo '${{ github.repository }}'

  publish-to-testpypi:
    name: Publish distribution to TestPyPI
    needs: build
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/calabar

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
